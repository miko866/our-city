apiVersion: v1
kind: Service
metadata:
  name: ourcitybackenddevelopment-service
  namespace: our-city
spec:
  selector:
    app: our-city.backend.development
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8080
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ourcitybackenddevelopment-ingress
  namespace: our-city
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100m  
spec:
  rules:
    - host: ourcity-development.substring.company
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ourcitybackenddevelopment-service
                port:
                  number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: our-city.backend-development-deployment
  namespace: our-city
  labels:
    app: our-city.backend.development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: our-city.backend.development
  template:
    metadata:
      labels:
        app: our-city.backend.development
    spec:
      containers:
        - name: ourcity-backend
          image: 'office.substring.ch:5050/our-city/ourcity.backend:latest'
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8080
          env:
            - name: "ASPNETCORE_ENVIRONMENT"
              value: "Development"
      imagePullSecrets:
        - name: ourcity-docker-registry
